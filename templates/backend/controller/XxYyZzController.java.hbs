package {{rootPackageName}}.{{controllerPackageName}};

import {{rootPackageName}}.cb.common.auth.annotation.PermissionCheck;
import {{rootPackageName}}.cb.domain.response.Response;
import {{rootPackageName}}.cb.common.page.dto.PageResult;
import {{rootPackageName}}.{{convertPackageName}}.{{pascalTableName}}Convert;
import {{rootPackageName}}.{{voPackageName}}.{{pascalTableName}}CreateReqVO;
import {{rootPackageName}}.{{voPackageName}}.{{pascalTableName}}UpdateReqVO;
import {{rootPackageName}}.{{voPackageName}}.{{pascalTableName}}PageReqVO;
import {{rootPackageName}}.{{voPackageName}}.{{pascalTableName}}RespVO;
import {{rootPackageName}}.{{domainPackageName}}.dataobject.{{pascalTableName}}DO;
import {{rootPackageName}}.{{servicePackageName}}.{{pascalTableName}}Service;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import javax.validation.Valid;

@Tag(name = "{{index}}-{{tableComment}}", description = "{{tableComment}}接口")
@RestController
@RequestMapping("{{apiPrefix}}")
@Validated
public class {{pascalTableName}}Controller {

    @Resource
    private {{pascalTableName}}Service {{camelTableName}}Service;

    @PostMapping("create")
    @Operation(summary = "创建{{tableComment}}")
    @PermissionCheck(code = "{{tableModule}}:{{camelTableName}}:create")
    public Response<Long> create(@Valid @RequestBody {{pascalTableName}}CreateReqVO {{camelTableName}}CreateReqVO) {
        return new Response<>({{camelTableName}}Service.create{{pascalTableName}}({{camelTableName}}CreateReqVO));
    }

    @DeleteMapping("delete")
    @Operation(summary = "删除{{tableComment}}")
    @PermissionCheck(code = "{{tableModule}}:{{camelTableName}}:delete")
    public Response<Boolean> delete{{pascalTableName}}(@RequestParam("id") Long id) {
        {{camelTableName}}Service.delete{{pascalTableName}}(id);
        return new Response<>(Boolean.TRUE);
    }

    @PutMapping("update")
    @Operation(summary = "更新{{tableComment}}")
    @PermissionCheck(code = "{{tableModule}}:{{camelTableName}}:update")
    public Response<Boolean> update{{pascalTableName}}(@Valid @RequestBody {{pascalTableName}}UpdateReqVO {{camelTableName}}UpdateReqVO) {
        {{camelTableName}}Service.update{{pascalTableName}}({{camelTableName}}UpdateReqVO);
        return new Response<>(Boolean.TRUE);
    }

    @GetMapping("get")
    @Operation(summary = "获取单个{{tableComment}}")
    @PermissionCheck(code = "{{tableModule}}:{{camelTableName}}:get")
    public Response<{{pascalTableName}}RespVO> get{{pascalTableName}}(@RequestParam("id") Long id) {
        return new Response<>({{pascalTableName}}Convert.INSTANCE.convert({{camelTableName}}Service.get{{pascalTableName}}(id)));
    }

    @GetMapping("page")
    @Operation(summary = "分页查询{{tableComment}}")
    @PermissionCheck(code = "{{tableModule}}:{{camelTableName}}:get")
    public Response<PageResult<{{pascalTableName}}RespVO>> get{{pascalTableName}}Page({{pascalTableName}}PageReqVO {{camelTableName}}PageReqVO) {
        PageResult<{{pascalTableName}}DO> {{camelTableName}}DOPageResult = {{camelTableName}}Service.get{{pascalTableName}}Page({{camelTableName}}PageReqVO);
        return new Response<>(new PageResult<>({{pascalTableName}}Convert.INSTANCE.convertList({{camelTableName}}DOPageResult.getRecords()),
            {{camelTableName}}DOPageResult.getTotal(), {{camelTableName}}DOPageResult.getSize(), {{camelTableName}}DOPageResult.getCurrent()));
    }
}